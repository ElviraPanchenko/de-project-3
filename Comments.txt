
1. Можно сделать два уровня стейджинга в SQL. 
Я совсем не понимаю как это сделать :( 
 Надо создать еще 1 функцию? Какую часть своего кода заменить функцией ? 
Начиная с этого момента - « df.drop_duplicates(subset=['id'], inplace=True)»? 
Что должно передаваться в функцию?  

А эту часть  ниже всю тоже в функцию ? 
 postgres_hook = PostgresHook(postgres_conn_id)
    engine = postgres_hook.get_sqlalchemy_engine()
    
    try:
        print('status' in df.columns)  
    except:
        print('create staging table error')

    migration_sql = '''
        alter table if exists staging.user_order_log add column if not exists "status" varchar(50);
        alter table if exists mart.f_sales add column if not exists "status" varchar(50);
        alter table if exists staging.user_order_log alter column status set default 'shipped';
        '''    
    try:
        postgres_hook.run(migration_sql, autocommit=True)
    except:
        print('migration error error')
    
    delete_date_sql = f'''
        delete from staging.user_order_log where date_time::date = '{date}'
        '''
    try: 
        postgres_hook.run(delete_date_sql, autocommit=True)
        print('date cleaned up ', business_dt)
    except:
        print('date cleanup error')
    try:
        df.to_sql(pg_table, engine, schema=pg_schema, if_exists='append', index=False)
        task_logger.info('Upload success', business_dt)
        #COPY pg_table FROM 'C:\tmp\sample_data.csv' DELIMITER ',' CSV HEADER;
    except:
        print('load data to staging error')



2. Так тут выполнение SQL прям посередине скрипта, как я могу это заменить оператором именно чтоб эта часть выполнялась? Дальше же просто скрипт дальше идет… непонятно совсем



